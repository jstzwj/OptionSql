CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

PROJECT(OptionSQL)

# 项目文件路径
SET(OPTIONSQL_PATH ${PROJECT_SOURCE_DIR} CACHE STRING "Adds a path to numcpp" FORCE)
SET(OPTIONSQL_PATH_BIN ${OPTIONSQL_PATH}/lib/ CACHE STRING "Adds a path to output dir" FORCE)
SET(OPTIONSQL_PATH_DEPENDENCIES ${OPTIONSQL_PATH}/contrib CACHE STRING "Adds a path to numcpp dependencies" FORCE)
SET(OPTIONSQL_PATH_TESTS ${OPTIONSQL_PATH}/tests CACHE STRING "Adds a path to numcpp tests" FORCE)
SET(OPTIONSQL_PATH_INCLUDE ${OPTIONSQL_PATH}/include CACHE STRING "Adds a path to numcpp header" FORCE)
SET(OPTIONSQL_PATH_HEADER ${OPTIONSQL_PATH_INCLUDE}/OptionSQL CACHE STRING "Adds a path to numcpp header" FORCE)
SET(OPTIONSQL_PATH_SOURCE ${OPTIONSQL_PATH}/source CACHE STRING "Adds a path to numcpp source" FORCE)

# 编译选项
OPTION(OPTIONSQL_BUILD_NO_TESTS "ON to disable test binary generation" OFF)
OPTION(OPTIONSQL_BUILD_SSE "ON for use OFF for ignore" OFF)
OPTION(OPTIONSQL_BUILD_DEBUG_MODE "ON for debug or OFF for release" ON)
OPTION(OPTIONSQL_BUILD_MUTILTHREAD_DLL "ON for /MD OFF for /MT" ON)

# 设置默认编译平台
IF(ANDROID_ABI OR CMAKE_SYSTEM_NAME MATCHES "VCMDDAndroid")
	SET(PLATFORM 3)
	SET(VCMDDAndroid 1)
ELSEIF(WIN32)
    SET(PLATFORM 4)
ELSEIF(APPLE)
	SET(PLATFORM 1)
ELSEIF(UNIX)
	SET(PLATFORM 2)
ELSE()
	SET(PLATFORM 4)
ENDIF()

# 设置目标编译平台
SET(OPTIONSQL_BUILD_PLATFORM ${PLATFORM} CACHE STRING
"Specify the platform. Possible values:
  1 - Apple
  2 - Linux
  3 - Android
  4 - Windows
  5 - Java"
)

IF(OPTIONSQL_BUILD_PLATFORM EQUAL 1)
	SET(OPTIONSQL_BUILD_PLATFORM_APPLE TRUE)
	ADD_DEFINITIONS(-DOPTIONSQL_BUILD_PLATFORM_APPLE)
ELSEIF(OPTIONSQL_BUILD_PLATFORM EQUAL 2)
	SET(OPTIONSQL_BUILD_PLATFORM_LINUX TRUE)
	ADD_DEFINITIONS(-DOPTIONSQL_BUILD_PLATFORM_LINUX)
ELSEIF(OPTIONSQL_BUILD_PLATFORM EQUAL 3)
	SET(OPTIONSQL_BUILD_PLATFORM_ANDROID TRUE)
	ADD_DEFINITIONS(-DOPTIONSQL_BUILD_PLATFORM_ANDROID)
ELSEIF(OPTIONSQL_BUILD_PLATFORM EQUAL 4)
	SET(OPTIONSQL_BUILD_PLATFORM_WINDOWS TRUE)
	ADD_DEFINITIONS(-DOPTIONSQL_BUILD_PLATFORM_WINDOWS)
ELSEIF(OPTIONSQL_BUILD_PLATFORM EQUAL 5)
	SET(OPTIONSQL_BUILD_PLATFORM_JAVA TRUE)
	ADD_DEFINITIONS(-DOPTIONSQL_BUILD_PLATFORM_JAVA)
ENDIF()

# CXX 14 扩展
SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)

# 设置编译文件后缀
SET(CMAKE_DEBUG_POSTFIX "_d" CACHE STRING "Adds a postfix for debug-built libraries.")
SET(CMAKE_RELEASE_POSTFIX "" CACHE STRING "Adds a postfix for release-built libraries.")
SET(CMAKE_RELWITHDEBINFO_POSTFIX "_RelWithDebugInfo" CACHE STRING "Adds a postfix for ReleaseWithDebug-built libraries.")
SET(CMAKE_MINSIZEREL_POSTFIX "_MinsizeRel" CACHE STRING "Adds a postfix for MinsizeRelease-built libraries.")

# 指定库文件输出路径
SET(OPTIONSQL_LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib/binaries/${PLATFORM_NAME}${LIBRARY_OUT_NAME} CACHE STRING "build path" FORCE)
SET(OPTIONSQL_LIBRARY_OUTPUT_PATH_DEBUG ${OPTIONSQL_LIBRARY_OUTPUT_PATH}_Debug CACHE STRING "build path" FORCE)
SET(OPTIONSQL_LIBRARY_OUTPUT_PATH_RELEASE ${OPTIONSQL_LIBRARY_OUTPUT_PATH}_Release CACHE STRING "build path" FORCE)
SET(OPTIONSQL_LIBRARY_OUTPUT_PATH_RELWITHDEBINFO ${OPTIONSQL_LIBRARY_OUTPUT_PATH}_RelWithDebugInfo CACHE STRING "build path" FORCE)
SET(OPTIONSQL_LIBRARY_OUTPUT_PATH_MINSIZEREL ${OPTIONSQL_LIBRARY_OUTPUT_PATH}_MinsizeRel CACHE STRING "build path" FORCE)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

MACRO(SET_TARGET_ATTRIBUTE target directory)
	SET_TARGET_PROPERTIES(${target} PROPERTIES
		ARCHIVE_OUTPUT_DIRECTORY ${OPTIONSQL_LIBRARY_OUTPUT_PATH}
		ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${OPTIONSQL_LIBRARY_OUTPUT_PATH_DEBUG}
		ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${OPTIONSQL_LIBRARY_OUTPUT_PATH_RELEASE}
		ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${OPTIONSQL_LIBRARY_OUTPUT_PATH_RELWITHDEBINFO}
		ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${OPTIONSQL_LIBRARY_OUTPUT_PATH_MINSIZEREL}
		LIBRARY_OUTPUT_DIRECTORY ${OPTIONSQL_LIBRARY_OUTPUT_PATH}
		LIBRARY_OUTPUT_DIRECTORY_DEBUG ${OPTIONSQL_LIBRARY_OUTPUT_PATH_DEBUG}
		LIBRARY_OUTPUT_DIRECTORY_RELEASE ${OPTIONSQL_LIBRARY_OUTPUT_PATH_RELEASE}
		LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${OPTIONSQL_LIBRARY_OUTPUT_PATH_RELWITHDEBINFO}
		LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL ${OPTIONSQL_LIBRARY_OUTPUT_PATH_MINSIZEREL}
		RUNTIME_OUTPUT_DIRECTORY ${OPTIONSQL_LIBRARY_OUTPUT_PATH}
		RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OPTIONSQL_LIBRARY_OUTPUT_PATH_DEBUG}
		RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OPTIONSQL_LIBRARY_OUTPUT_PATH_RELEASE}
		RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${OPTIONSQL_LIBRARY_OUTPUT_PATH_RELWITHDEBINFO}
		RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${OPTIONSQL_LIBRARY_OUTPUT_PATH_MINSIZEREL}
	)
	SET_TARGET_PROPERTIES(${target} PROPERTIES DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})
	SET_TARGET_PROPERTIES(${target} PROPERTIES PROJECT_LABEL ${target})
	SET_TARGET_PROPERTIES(${target} PROPERTIES FOLDER ${directory})
	IF(MINGW OR CMAKE_GENERATOR MATCHES "Unix")
		STRING(REGEX REPLACE "lib" "" target_name ${target})
		SET_TARGET_PROPERTIES(${target} PROPERTIES OUTPUT_NAME ${target_name})
	ENDIF()
	IF(CMAKE_GENERATOR MATCHES "Visual Studio")
		IF(VCMDDAndroid)
			SET_PROPERTY(TARGET ${LIB_NAME} PROPERTY VC_MDD_ANDROID_API_LEVEL "android-21")
		ELSEIF(${CMAKE_VS_PLATFORM_TOOLSET} STREQUAL "v140_clang_3_7")
			SET_PROPERTY(TARGET ${LIB_NAME} PROPERTY VS_PLATFORM_TOOLSET_OVERRIDE "v140_clang_3_7")
		ENDIF()
	ENDIF()
ENDMACRO()

# 添加第三方库
ADD_SUBDIRECTORY(contrib)

# 添加项目
ADD_SUBDIRECTORY(source)

# 单元测试
IF(NOT OPTIONSQL_BUILD_NO_TESTS)
	ADD_SUBDIRECTORY(tests)
ENDIF()